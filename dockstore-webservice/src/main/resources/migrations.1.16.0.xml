<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<!--
  ~    Copyright 2024 OICR and UCSC
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"
                   context="1.16.0">
    <changeSet author="ktran (generated)" id="addNumberOfSkippedExecutions">
        <createSequence cacheSize="1" cycle="false" incrementBy="1" maxValue="9223372036854775807" minValue="1" sequenceName="metric_id_seq" startValue="1"/>
        <sql dbms="postgresql">
            <comment>Set the value of the metric_id_seq to the greatest value between statisticmetric_id_seq and countmetric_id_seq</comment>
            SELECT setval('metric_id_seq', (SELECT last_value FROM statisticmetric_id_seq)) WHERE (SELECT last_value FROM metric_id_seq) &lt; (SELECT last_value FROM statisticmetric_id_seq);
            SELECT setval('metric_id_seq', (SELECT last_value FROM countmetric_id_seq)) WHERE (SELECT last_value FROM metric_id_seq) &lt; (SELECT last_value FROM countmetric_id_seq);
        </sql>
        <createTable tableName="countmetric">
            <column name="dbcreatedate" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="dbupdatedate" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="countmetric_pkey"/>
            </column>
        </createTable>
        <createTable tableName="metric">
            <column name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="metric_pkey"/>
            </column>
            <column name="numberofskippedexecutions" type="INTEGER" defaultValue="0">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <createTable tableName="statisticmetric">
            <column name="average" type="FLOAT8">
                <constraints nullable="false"/>
            </column>
            <column name="dbcreatedate" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="dbupdatedate" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="maximum" type="FLOAT8">
                <constraints nullable="false"/>
            </column>
            <column name="minimum" type="FLOAT8">
                <constraints nullable="false"/>
            </column>
            <column name="numberofdatapointsforaverage" type="INTEGER">
                <constraints nullable="false"/>
            </column>
            <column name="unit" type="VARCHAR(255)"/>
            <column name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="statisticmetric_pkey"/>
            </column>
        </createTable>
        <sql dbms="postgresql">
            INSERT INTO metric(id) SELECT id FROM validation_status;
            INSERT INTO countmetric(id) SELECT id FROM validation_status;
            INSERT INTO metric(id) SELECT id FROM execution_status;
            INSERT INTO countmetric(id) SELECT id FROM execution_status;
        </sql>
        <!-- Migrate columns from cpu_metric to statisticmetric -->
        <dropForeignKeyConstraint baseTableName="metrics_by_status" constraintName="fk_cpuid_metricsbystatus"/>
        <sql dbms="postgresql">
            CREATE TEMPORARY TABLE cpu_metric_ids_to_update AS
            WITH cpu_metric_ids AS (
                SELECT id AS oldid, nextval('metric_id_seq') AS newid
                FROM cpu_metric
            )
            SELECT * FROM cpu_metric_ids;

            UPDATE cpu_metric SET id = (SELECT newid FROM cpu_metric_ids_to_update WHERE id = oldid);
            UPDATE metrics_by_status SET cpuid = (SELECT newid FROM cpu_metric_ids_to_update WHERE cpuid = oldid);
            INSERT INTO statisticmetric(id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate) SELECT id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate FROM cpu_metric;
        </sql>
        <addForeignKeyConstraint baseColumnNames="cpuid" baseTableName="metrics_by_status" constraintName="fk_cpuid_metricsbystatus" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="cpu_metric"/>
        <!-- Migrate columns from cost_metric to statisticmetric -->
        <dropForeignKeyConstraint baseTableName="metrics_by_status" constraintName="fk_costid_metricsbystatus"/>
        <sql dbms="postgresql">
            CREATE TEMPORARY TABLE cost_metric_ids_to_update AS
            WITH cost_metric_ids AS (
                SELECT id AS oldid, nextval('metric_id_seq') AS newid
                FROM cost_metric
            )
            SELECT * FROM cost_metric_ids;

            UPDATE cost_metric SET id = (SELECT newid FROM cost_metric_ids_to_update WHERE id = oldid);
            UPDATE metrics_by_status SET costid = (SELECT newid FROM cost_metric_ids_to_update WHERE costid = oldid);
            INSERT INTO statisticmetric(id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate) SELECT id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate FROM cost_metric;
        </sql>
        <addForeignKeyConstraint baseColumnNames="costid" baseTableName="metrics_by_status" constraintName="fk_costid_metricsbystatus" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="cost_metric"/>
        <!-- Migrate columns from execution_time_metric to statisticmetric -->
        <dropForeignKeyConstraint baseTableName="metrics_by_status" constraintName="fk_executiontimeid_metricsbystatus"/>
        <sql dbms="postgresql">
            CREATE TEMPORARY TABLE execution_time_metric_ids_to_update AS
            WITH execution_time_metric_ids AS (
                SELECT id AS oldid, nextval('metric_id_seq') AS newid
                FROM execution_time_metric
            )
            SELECT * FROM execution_time_metric_ids;

            UPDATE execution_time_metric SET id = (SELECT newid FROM execution_time_metric_ids_to_update WHERE id = oldid);
            UPDATE metrics_by_status SET executiontimeid = (SELECT newid FROM execution_time_metric_ids_to_update WHERE executiontimeid = oldid);
            INSERT INTO statisticmetric(id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate) SELECT id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate FROM execution_time_metric;
        </sql>
        <addForeignKeyConstraint baseColumnNames="executiontimeid" baseTableName="metrics_by_status" constraintName="fk_executiontimeid_metricsbystatus" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="execution_time_metric"/>
        <!-- Migrate columns from memory_metric to statisticmetric -->
        <dropForeignKeyConstraint baseTableName="metrics_by_status" constraintName="fk_memoryid_metricsbystatus"/>
        <sql dbms="postgresql">
            CREATE TEMPORARY TABLE memory_metric_ids_to_update AS
            WITH memory_metric_ids AS (
                SELECT id AS oldid, nextval('metric_id_seq') AS newid
                FROM memory_metric
            )
            SELECT * FROM memory_metric_ids;

            UPDATE memory_metric SET id = (SELECT newid FROM memory_metric_ids_to_update WHERE id = oldid);
            UPDATE metrics_by_status SET memoryid = (SELECT newid FROM memory_metric_ids_to_update WHERE memoryid = oldid);
            INSERT INTO statisticmetric(id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate) SELECT id, average, maximum, minimum, numberofdatapointsforaverage, unit, dbcreatedate, dbupdatedate FROM memory_metric;
        </sql>
        <addForeignKeyConstraint baseColumnNames="memoryid" baseTableName="metrics_by_status" constraintName="fk_memoryid_metricsbystatus" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="memory_metric"/>
        <sql dbms="postgresql">
            INSERT INTO metric(id) SELECT id FROM statisticmetric;
        </sql>

        <addForeignKeyConstraint baseColumnNames="id" baseTableName="countmetric" constraintName="fk_countmetric_metric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="metric"/>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="validation_status" constraintName="fk_validationstatus_countmetric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="countmetric"/>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="execution_status" constraintName="fk_executionstatus_countmetric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="countmetric"/>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="statisticmetric" constraintName="fk_statisticmetric_metric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="metric"/>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="cpu_metric" constraintName="fk_cpumetric_statisticmetric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="statisticmetric"/>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="memory_metric" constraintName="fk_memorymetric_statisticmetric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="statisticmetric"/>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="cost_metric" constraintName="fk_costmetric_statisticmetric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="statisticmetric"/>
        <addForeignKeyConstraint baseColumnNames="id" baseTableName="execution_time_metric" constraintName="fk_executiontimemetric_statisticmetric" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="statisticmetric"/>

        <dropColumn columnName="average" tableName="cost_metric"/>
        <dropColumn columnName="average" tableName="cpu_metric"/>
        <dropColumn columnName="average" tableName="execution_time_metric"/>
        <dropColumn columnName="average" tableName="memory_metric"/>
        <dropColumn columnName="dbcreatedate" tableName="cost_metric"/>
        <dropColumn columnName="dbcreatedate" tableName="cpu_metric"/>
        <dropColumn columnName="dbcreatedate" tableName="execution_status"/>
        <dropColumn columnName="dbcreatedate" tableName="execution_time_metric"/>
        <dropColumn columnName="dbcreatedate" tableName="memory_metric"/>
        <dropColumn columnName="dbcreatedate" tableName="validation_status"/>
        <dropColumn columnName="dbupdatedate" tableName="cost_metric"/>
        <dropColumn columnName="dbupdatedate" tableName="cpu_metric"/>
        <dropColumn columnName="dbupdatedate" tableName="execution_status"/>
        <dropColumn columnName="dbupdatedate" tableName="execution_time_metric"/>
        <dropColumn columnName="dbupdatedate" tableName="memory_metric"/>
        <dropColumn columnName="dbupdatedate" tableName="validation_status"/>
        <dropColumn columnName="maximum" tableName="cost_metric"/>
        <dropColumn columnName="maximum" tableName="cpu_metric"/>
        <dropColumn columnName="maximum" tableName="execution_time_metric"/>
        <dropColumn columnName="maximum" tableName="memory_metric"/>
        <dropColumn columnName="minimum" tableName="cost_metric"/>
        <dropColumn columnName="minimum" tableName="cpu_metric"/>
        <dropColumn columnName="minimum" tableName="execution_time_metric"/>
        <dropColumn columnName="minimum" tableName="memory_metric"/>
        <dropColumn columnName="numberofdatapointsforaverage" tableName="cost_metric"/>
        <dropColumn columnName="numberofdatapointsforaverage" tableName="cpu_metric"/>
        <dropColumn columnName="numberofdatapointsforaverage" tableName="execution_time_metric"/>
        <dropColumn columnName="numberofdatapointsforaverage" tableName="memory_metric"/>
        <dropColumn columnName="unit" tableName="cost_metric"/>
        <dropColumn columnName="unit" tableName="cpu_metric"/>
        <dropColumn columnName="unit" tableName="execution_time_metric"/>
        <dropColumn columnName="unit" tableName="memory_metric"/>
        <dropSequence sequenceName="countmetric_id_seq"/>
        <dropSequence sequenceName="statisticmetric_id_seq"/>
    </changeSet>
    <changeSet author="ktran (generated)" id="allowLongerTopics">
        <modifyDataType columnName="topicai" newDataType="varchar(250)" tableName="apptool"/>
        <modifyDataType columnName="topicai" newDataType="varchar(250)" tableName="notebook"/>
        <modifyDataType columnName="topicai" newDataType="varchar(250)" tableName="service"/>
        <modifyDataType columnName="topicai" newDataType="varchar(250)" tableName="tool"/>
        <modifyDataType columnName="topicai" newDataType="varchar(250)" tableName="workflow"/>
        <modifyDataType columnName="topicautomatic" newDataType="varchar(250)" tableName="apptool"/>
        <modifyDataType columnName="topicautomatic" newDataType="varchar(250)" tableName="notebook"/>
        <modifyDataType columnName="topicautomatic" newDataType="varchar(250)" tableName="service"/>
        <modifyDataType columnName="topicautomatic" newDataType="varchar(250)" tableName="tool"/>
        <modifyDataType columnName="topicautomatic" newDataType="varchar(250)" tableName="workflow"/>
        <modifyDataType columnName="topicmanual" newDataType="varchar(250)" tableName="apptool"/>
        <modifyDataType columnName="topicmanual" newDataType="varchar(250)" tableName="notebook"/>
        <modifyDataType columnName="topicmanual" newDataType="varchar(250)" tableName="service"/>
        <modifyDataType columnName="topicmanual" newDataType="varchar(250)" tableName="tool"/>
        <modifyDataType columnName="topicmanual" newDataType="varchar(250)" tableName="workflow"/>
    </changeSet>
    <changeSet author="dyuen (generated)" id="add_aitopicprocessed">
        <addColumn tableName="tag">
            <column defaultValueBoolean="false" name="aitopicprocessed" type="bool"/>
        </addColumn>
        <addColumn tableName="workflowversion">
            <column defaultValueBoolean="false" name="aitopicprocessed" type="bool"/>
        </addColumn>
    </changeSet>
    <changeSet author="hyunnaye" id="fixConceptDOIs">
        <sql dbms="postgresql">
            ALTER TABLE workflow DISABLE TRIGGER update_archived_workflow;

            UPDATE workflow
            SET conceptdoi = REGEXP_REPLACE(conceptdoi, 'doi/', '', 'g')
            WHERE conceptdoi IS NOT NULL;

            ALTER TABLE workflow ENABLE TRIGGER update_archived_workflow;
        </sql>
        <sql dbms="postgresql">
            ALTER TABLE apptool DISABLE TRIGGER update_archived_apptool;

            UPDATE apptool
            SET conceptdoi = REGEXP_REPLACE(conceptdoi, 'doi/', '', 'g')
            WHERE conceptdoi IS NOT NULL;

            ALTER TABLE apptool ENABLE TRIGGER update_archived_apptool;
        </sql>
        <sql dbms="postgresql">
            ALTER TABLE service DISABLE TRIGGER update_archived_service;

            UPDATE service
            SET conceptdoi = REGEXP_REPLACE(conceptdoi, 'doi/', '', 'g')
            WHERE conceptdoi IS NOT NULL;

            ALTER TABLE service ENABLE TRIGGER update_archived_service;
        </sql>
        <sql dbms="postgresql">
            ALTER TABLE notebook DISABLE TRIGGER update_archived_notebook;

            UPDATE notebook
            SET conceptdoi = REGEXP_REPLACE(conceptdoi, 'doi/', '', 'g')
            WHERE conceptdoi IS NOT NULL;

            ALTER TABLE notebook ENABLE TRIGGER update_archived_notebook;
        </sql>
    </changeSet>
    <changeSet author="ktran (generated)" id="addAutomaticDoiCreation">
        <createTable tableName="doi">
            <column autoIncrement="true" name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="doi_pkey"/>
            </column>
            <column name="initiator" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="dbcreatedate" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="dbupdatedate" type="TIMESTAMP WITHOUT TIME ZONE"/>
            <column name="editaccesslinkid" type="VARCHAR(255)"/>
            <column name="type" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addUniqueConstraint columnNames="name" constraintName="unique_doi_name" tableName="doi"/>
        <createTable tableName="version_metadata_doi">
            <column name="versionmetadataid" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="version_metadata_doi_pkey"/>
            </column>
            <column name="doiid" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="version_metadata_doi_pkey"/>
            </column>
        </createTable>
        <createTable tableName="entry_concept_doi">
            <column name="entryid" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="entry_concept_doi_pkey"/>
            </column>
            <column name="doiid" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="entry_concept_doi_pkey"/>
            </column>
        </createTable>
        <addForeignKeyConstraint baseColumnNames="doiid" baseTableName="entry_concept_doi" constraintName="fk_doiid_entry_concept_doi" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="doi"/>
        <addForeignKeyConstraint baseColumnNames="versionmetadataid" baseTableName="version_metadata_doi" constraintName="fk_versionmetadataid_version_metadata_doi" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="version_metadata"/>
        <addForeignKeyConstraint baseColumnNames="doiid" baseTableName="version_metadata_doi" constraintName="fk_doiid_version_metadata_doi" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id" referencedTableName="doi"/>
        <sql dbms="postgresql">
            <comment>Migrate entry concept DOIs</comment>
            CREATE TEMPORARY TABLE concept_doi_entries AS
            SELECT * FROM (
                SELECT id, conceptdoi
                FROM workflow
                UNION ALL
                SELECT id, conceptdoi
                FROM apptool
                UNION ALL
                SELECT id, conceptdoi
                FROM service
                UNION ALL
                SELECT id, conceptdoi
                FROM notebook
            ) AS entries_ids_dois
            WHERE conceptdoi IS NOT NULL;

            INSERT INTO doi(initiator, type, name)
            SELECT 'USER', 'CONCEPT', conceptdoi
            FROM concept_doi_entries;

            INSERT INTO entry_concept_doi(entryid, doiid)
            SELECT concept_doi_entries.id, doi.id
            FROM concept_doi_entries
            INNER JOIN doi ON concept_doi_entries.conceptdoi = doi.name;
        </sql>
        <sql dbms="postgresql">
            <comment>Migrate version DOIs</comment>
            INSERT INTO doi(initiator, type, name)
            SELECT 'USER', 'VERSION', doiurl
            FROM version_metadata
            WHERE doiurl IS NOT NULL;

            INSERT INTO version_metadata_doi(versionmetadataid, doiid)
            SELECT version_metadata.id, doi.id
            FROM version_metadata
            INNER JOIN doi ON version_metadata.doiurl = doi.name
            WHERE version_metadata.doiurl IS NOT NULL;
        </sql>
    </changeSet>
    <changeSet author="svonworl" id="addStateFieldToSourceFile">
        <addColumn tableName="sourcefile">
            <column name="state" type="VARCHAR(255)" defaultValue="COMPLETE">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <sql dbms="postgresql">
            <comment>Set state for sourcefiles with null content</comment>
            UPDATE sourcefile SET state = 'STUB' WHERE content IS NULL;
        </sql>
        <sql dbms="postgresql">
            <comment>Set state for binary sourcefiles</comment>
            UPDATE sourcefile SET state = 'NOT_STORED' WHERE content = 'Dockstore does not store binary files';
        </sql>
    </changeSet>
    <changeSet author="ktran (generated)" id="addDoiSelection">
        <addColumn tableName="apptool">
            <column defaultValue="USER" name="doiselection" type="varchar(32 BYTE)">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="notebook">
            <column defaultValue="USER" name="doiselection" type="varchar(32 BYTE)">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="service">
            <column defaultValue="USER" name="doiselection" type="varchar(32 BYTE)">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="tool">
            <column defaultValue="USER" name="doiselection" type="varchar(32 BYTE)">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="workflow">
            <column defaultValue="USER" name="doiselection" type="varchar(32 BYTE)">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="ktran (generated)" id="trackApprovedAITopic">
        <addColumn tableName="apptool">
            <column defaultValueBoolean="false" name="approvedaitopic" type="bool"/>
        </addColumn>
        <addColumn tableName="notebook">
            <column defaultValueBoolean="false" name="approvedaitopic" type="bool"/>
        </addColumn>
        <addColumn tableName="service">
            <column defaultValueBoolean="false" name="approvedaitopic" type="bool"/>
        </addColumn>
        <addColumn tableName="tool">
            <column defaultValueBoolean="false" name="approvedaitopic" type="bool"/>
        </addColumn>
        <addColumn tableName="workflow">
            <column defaultValueBoolean="false" name="approvedaitopic" type="bool"/>
        </addColumn>
    </changeSet>
    <changeSet id="releaseDate" author="coverbeck">
        <addColumn tableName="apptool">
            <column name="latestreleasedate" type="TIMESTAMP WITHOUT TIME ZONE">
            </column>
        </addColumn>
        <addColumn tableName="notebook">
            <column name="latestreleasedate" type="TIMESTAMP WITHOUT TIME ZONE">
            </column>
        </addColumn>
        <addColumn tableName="service">
            <column name="latestreleasedate" type="TIMESTAMP WITHOUT TIME ZONE">
            </column>
        </addColumn>
        <addColumn tableName="workflow">
            <column name="latestreleasedate" type="TIMESTAMP WITHOUT TIME ZONE">
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="ktran (generated)" id="trackLatestMetricsSubmissionAndAggregationDate">
        <addColumn tableName="version_metadata">
            <column name="latestmetricsaggregationdate" type="timestamp"/>
        </addColumn>
        <addColumn tableName="version_metadata">
            <column name="latestmetricssubmissiondate" type="timestamp"/>
        </addColumn>
    </changeSet>
    <changeSet id="autoGenerateDois" author="coverbeck">
        <addColumn tableName="apptool">
            <column defaultValueBoolean="false" name="autogeneratedois" type="bool">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="notebook">
            <column defaultValueBoolean="false" name="autogeneratedois" type="bool">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="service">
            <column defaultValueBoolean="false" name="autogeneratedois" type="bool">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <addColumn tableName="workflow">
            <column defaultValueBoolean="false" name="autogeneratedois" type="bool">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>
    <changeSet author="dyuen (generated)" id="move_aitopicprocessed_to_versionmetadata">
        <addColumn tableName="version_metadata">
            <column defaultValueBoolean="false" name="aitopicprocessed" type="bool"/>
        </addColumn>
        <dropColumn tableName="tag" columnName="aitopicprocessed">
        </dropColumn>
        <dropColumn tableName="workflowversion" columnName="aitopicprocessed">
        </dropColumn>
    </changeSet>
</databaseChangeLog>
